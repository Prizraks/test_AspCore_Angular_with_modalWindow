// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using System;
using testAngular.Models;

namespace testAngular.Migrations
{
    [DbContext(typeof(DetailsContext))]
    [Migration("20180305061204_firstMigration")]
    partial class firstMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.0.1-rtm-125")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("testAngular.Models.Detail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int?>("Count");

                    b.Property<DateTime>("DateCreate");

                    b.Property<DateTime?>("DateDelete");

                    b.Property<string>("Name");

                    b.Property<string>("NomCode");

                    b.Property<int>("StorekeeperId");

                    b.HasKey("Id");

                    b.HasIndex("StorekeeperId");

                    b.ToTable("Details");
                });

            modelBuilder.Entity("testAngular.Models.Storekeeper", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("KeeperName");

                    b.HasKey("Id");

                    b.ToTable("Storekeepers");
                });

            modelBuilder.Entity("testAngular.Models.Detail", b =>
                {
                    b.HasOne("testAngular.Models.Storekeeper", "Storekeeper")
                        .WithMany()
                        .HasForeignKey("StorekeeperId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
